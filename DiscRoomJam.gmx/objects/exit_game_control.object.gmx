<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>finalized = false;
curtain_y = 0;
dy = 2;
points = 0;
end_state = 0;
// 0 - Error
// 1 - Death
// 2 - Practice Over
// 3 - Game Win
// 4 - Perfect Win
// 5 - Boss Rush Win
end_text = "You aren't supposed to get this text.";

level_timer = 0;

ini_open("options.ini");
best_time_full_game = ini_read_real("times","full",-1);
best_time_boss_rush = ini_read_real("times","boss",-1);
ini_close();

text_color = global.grey;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!finalized)
{
    curtain_y = curtain_y + dy;
    if(curtain_y &gt; 288)
    {
        instance_deactivate_all(true);
        instance_activate_object(keybinds_control);
        instance_activate_object(global_control);
        finalized = true;
    }
}
else
{
    if(keyboard_check_pressed(keybinds_control.control_fire1))
    {
        audio_stop_all();
        room_goto(main_menu);
        if(end_state == 3 || end_state == 4)
        {
            ini_open("options.ini");
            ini_write_real("times","full",max(best_time_full_game,level_timer));
            ini_close();
        }
        else if(end_state == 5)
        {
            ini_open("options.ini");
            ini_write_real("times","boss",max(best_time_boss_rush,level_timer));
            ini_close();
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();
if(!finalized)
{
    draw_set_color(c_black);
    draw_rectangle(0,0,385,curtain_y,false);
}
else
{
    draw_set_color(c_black);
    draw_rectangle(0,0,385,curtain_y,false);
    draw_set_color(text_color);
    draw_set_valign(fa_middle);
    draw_set_halign(fa_center);
    draw_text(room_width/2,room_height/2,end_text);
    
    if(end_state == 3 || end_state == 4)
    {
        draw_text(room_width/2,room_height/2-68,"Time: " + string(level_timer div 3600) + ":" + string((level_timer div 60) mod 60) + "." + string(floor(100 * (level_timer mod 60) / 60)));
        if(best_time_full_game != -1)
        {
            draw_text(room_width/2,room_height/2-56,"Best time: " + string(best_time_full_game div 3600) + ":" + string((best_time_full_game div 60) mod 60) + "." + string(floor(100 * (best_time_full_game mod 60) / 60)));
        }
    }
    
    if(end_state == 5)
    {
        draw_text(room_width/2,room_height/2-68,"Time: " + string(level_timer div 3600) + ":" + string((level_timer div 60) mod 60) + "." + string(floor(100 * (level_timer mod 60) / 60)));
        if(best_time_boss_rush != -1)
        {
            draw_text(room_width/2,room_height/2-56,"Best time: " + string(best_time_boss_rush div 3600) + ":" + string((best_time_boss_rush div 60) mod 60) + "." + string(floor(100 * (best_time_boss_rush mod 60) / 60)));
        }
    }
    
    if(end_state == 4)    
    {
        draw_text(room_width/2,room_height/2-24,"[PERFECT]");
    }
    
    draw_text(room_width/2,room_height/2+52,"&lt;Press Fire to Continue&gt;");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
