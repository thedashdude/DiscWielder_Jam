<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(global.font);
text_color = make_color_rgb(211,181,170);
speed_factor = 1;

points = 0;
level_name = "TEST: ALPHA";





room_leftmost = 0;
room_rightmost = 288;
room_upmost = 0;
room_downmost = 288;
room_center_x = room_leftmost/2 + room_rightmost/2;
room_center_y = room_upmost/2 + room_downmost/2;




player_ability = ability_saw;
player_ability_count = 5;
player_lives = 3;





stages = ds_queue_create();
//ds_queue_enqueue(stages,runtime_overlord_00);
//ds_queue_enqueue(stages,runtime_overlord_boss_stage_1);

has_stage = true;

is_practice = false;
game_text = "Victory!";

//ds_queue_enqueue(stages,runtime_overlord_01);
//ds_queue_enqueue(stages,runtime_overlord_boss_stage_2);
//ds_queue_enqueue(stages,runtime_overlord_02);
//ds_queue_enqueue(stages,runtime_overlord_boss_stage_3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(has_stage &amp;&amp; stage.over)
{
    instance_destroy(stage);
    if(!ds_queue_empty(stages))
    {   
        stage = ds_queue_dequeue(stages);
        player_obj.active = true;
        instance_create(0,0,stage);
    }
    else
    {
        has_stage = false;
        var c = instance_create(0,0,exit_game_control);
        c.end_text = game_text;
        if(is_practice)
        {
            c.end_text = "Practice Complete"
            c.end_state = 2;
        }
        else if(player_lives &lt; 3)
        {
            c.end_state = 3;
        }
        else
        {
            c.end_state = 4;
        }
    }
}
else if(player_lives &lt; 0)
{
    var c = instance_create(0,0,exit_game_control);
    c.end_text = "You Died.";
    c.end_state = 1;
}

if(keyboard_check_pressed( keybinds_control.control_menu))
{
    instance_create(0,0,pause_game_control);
}
if(instance_exists(stage))
{
    bg = stage.bg;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(room_center_x-9,room_center_y,player_obj);
has_stage = true;
stage = ds_queue_dequeue(stages);
instance_create(0,0,stage);

if(instance_exists(stage))
{
    bg = stage.bg;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_sidebar,0,288,0)

//draw_set_color(make_colour_rgb(61, 174, 255))

draw_set_color(text_color)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)
if(instance_exists(stage))
{
    draw_text(288+48,48,stage.name);
}


draw_set_halign(fa_left)
draw_text(288+1,170,"Lives:")

for(var i = 0; i &lt; player_lives; i = i + 1)
{
    draw_sprite(spr_heart,0,288+1+ 13 + 13*i,170 + 13);
}

draw_text(288+1,200,"Cards:")
for(var i = 0; i &lt; player_ability_count; i = i + 1)
{
    var yoff = 0;
    if(i &gt; 5){yoff = 1;}
    draw_sprite(spr_diamond,0,288+1+ 13 + 13*i - yoff*13*6,200 + 13 + 13 * yoff);
}

if(instance_exists(player_obj))
{
    var yval = 256;
    var width = 88;
    var ratio = player_obj.attack_cooldown / player_obj.attack_cooldown_max;
    draw_set_color(c_black);
    for(var i = 0 ; i &lt; 5 ; i = i + 1 ){
        draw_line(288+4,yval+i,288+4+width,yval+i);
    }
    draw_set_color(global.purple);
    for(var i = 0 ; i &lt; 5 ; i = i + 1 ){
        draw_line(288+4,yval+i,288+4+width*ratio,yval+i);
    }
}


//draw_set_halign(fa_left)
//draw_text(288+1,96,"Pts:")

//draw_set_halign(fa_right)
//draw_text(288+96,96,string(points))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_background(bg,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
