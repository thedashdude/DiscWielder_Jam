<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = true
dead = false

sprsize_x = 18
sprsize_y = 24

attack_offset_x = -15
attack_offset_y = -24





move_spd = 1


attack_on = true
attack_cooldown_max = 60
attack_cooldown = 0

ability_index = 0
ability_count = 0

boost_spd = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(active){
    input_x = 0;
    input_y = 0;
    fire1 = keyboard_check( keybinds_control.control_fire1);
    fire2 = keyboard_check_pressed( keybinds_control.control_fire2);
    fire3 = keyboard_check( keybinds_control.control_fire3);
    
    if(keyboard_check( keybinds_control.control_left) )
    {
        input_x = input_x - 1
    }
    if(keyboard_check( keybinds_control.control_right) )
    {
        input_x = input_x + 1
    }
    if(keyboard_check( keybinds_control.control_up) )
    {
        input_y = input_y - 1
    }
    if(keyboard_check( keybinds_control.control_down) )
    {
        input_y = input_y + 1
    }
    if(!attack_on)
    {
        attack_cooldown = attack_cooldown + 1
        if(attack_cooldown &gt;= attack_cooldown_max)
        {
            attack_on = true
        }
    }
    
    if(!fire3){
        input_x = input_x * boost_spd
        input_y = input_y * boost_spd
    }
    
    
    
    x = clamp(x + input_x, level_control_obj.room_leftmost,level_control_obj.room_rightmost - sprsize_x)
    y = clamp(y + input_y, level_control_obj.room_upmost,level_control_obj.room_downmost - sprsize_y)
    
    if(fire1 &amp;&amp; attack_on)
    {
        var s = play_sfx(choose(attack_1_sfx,attack_2_sfx,attack_3_sfx));
        audio_sound_pitch(s, choose(0.8,0.9,1));
        attack_on = false
        attack_cooldown = 0
        instance_create(x + attack_offset_x, y + attack_offset_y, player_attack_obj)
    }
    
    if(fire2 &amp;&amp; level_control_obj.player_ability_count &gt; 0)
    {
        level_control_obj.player_ability_count = level_control_obj.player_ability_count - 1;
        script_execute(level_control_obj.player_ability);
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="deadly_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(active &amp;&amp; !dead){
    dead = true
    active = false
    
    var theta = other.splat_kill_angle
    if(theta == -1){
        theta = -360 / (2*pi) * arctan2(y+sprsize_y/2 - other.y,x+sprsize_x/2 - other.x)
        theta = theta mod 360
    }
    
    make_splatter(x + sprsize_x/2,y + sprsize_y/2,8,theta, other.splat_kill_spread, other.splat_kill_force, 20, 0);
    instance_create(0,0,death_control);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!dead){
    if(input_x == 0 )
        draw_sprite(spr_player,0,x,y)
    if(input_x &lt; 0 )
        draw_sprite(spr_player,1,x,y)
    if(input_x &gt; 0 )
        draw_sprite(spr_player,2,x,y)
    if(keyboard_check( keybinds_control.control_fire3))
    {
        draw_sprite(spr_hitbox_overlay,0,x,y)
    }
}
if(dead)
    draw_sprite(spr_player,3,x,y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
